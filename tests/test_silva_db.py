import unittest,os
from pna_designer import silva_manager



class slivamnger_TestCase(unittest.TestCase):
    #loading the db from catalog
    @classmethod
    def setUpClass(cls):
        path = os.path.dirname(os.path.realpath(__file__))
        #open database here for unittests
        cls.silva = silva_manager(path+"/silva_db_compiled")
        cls.Mstativa = "GAFF01033989.4391.6188"
        cls.Mstativa_seq="CCTGGTTGATCCTGCCAGTAGTCATATGCTTGTCTCAAAGATTAAGCCATGCATGTGTAAGTATGAACTAATTCAGACTGTGAAACTGCGAATGGCTCATTAAATCAGTTATAGTTTGTTTGATGGTATCTACTACTCGGATAACCGTAGTAATTCTAGAGCTAATACGTGCAACAAACCCCGACTTTTGGAAGGGATGCATTTATTAGATAAAAGGTCGACGCAGGCTCTGCCTGTTGCTTTGATGATTCATGATAACTCGTCGGATCGCACGGCCCTTGTGCTGGCGACGCATCATTCAAATTTCTGCCCTATCAACTTTCGATGGTAGGATAGTGGCCTACCATGGTGGTGACGGGTGACGGAGAATTAGGGTTCGATTCCGGAGAGGGAGCCTGAGAAACGGCTACCACATCCAAGGAAGGCAGCAGGCGCGCAAATTACCCAATCCTAACACGGGGAGGTAGTGACAATAAATAACAATACCGGGCTCATTGAGTCTGGTAATTGGAATGAGTACAATCTAAATCCCTTAACGAGGATCCATTGGAGGGCAAGTCTGGTGCCAGCAGCCGCGGTAATTCCAGCTCCAATAGCGTATATTTAAGTTGTTGCAGTTAAAAAGCTCGTAGTTGGACCTTGGGTTGGGTCGATCGGTCCGCCTATGGTGTGCACCGGTTGGCTCGTCCCTTCTGCCGGCGATGCGCTCCTGGCCTTAATTGGCCGGGTCGTGCCTCCGGCGCTGTTACTTTGAAGAAATTAGAGTGCTCAAAGCAAGCCTACGCTCTGGATACATTAGCATGGGATAACACCACAGGATTCTGATCCTATTGTGTTGGCCTTCGGGATCGGAGTAATGATTAACAGGGACAGTCGGGGGCATTCGTATTTCATAGTCAGAGGTGAAATTCTTGGATTTATGAAAGACGAACAACTGCGAAAGCATTTGCCAAGGATGTTTTCATTAATCAAGAACGAAAGTTGGGGGCTCGAAGACGATCAGATACCGTCCTAGTCTCAACCATAAACGATGCCGACCAGGGATCAGCGGATGTTGCTTTTAGGACTCCGCTGGCACCTTATGAGAAATCAAAGTCTTTGGGTTCCGGGGGGAGTATGGTCGCAAGGCTGAAACTTAAAGGAATTGACGGAAGGGCACCACCAGGAGTGGAGCCTGCGGCTTAATTTGACTCAACACGGGGAAACTTACCAGGTCCAGACATAGTAAGGATTGACAGACTGAGAGCTCTTTCTTGATTCTATGGGTGGTGGTGCATGGCCGTTCTTAGTTGGTGGAGCGATTTGTCTGGTTAATTCCGTTAACGAACGAGACCTCAGCCTGCTAAATAGCTATGTGGAGGTAACCCTCCACGGCCAGCTTCTTAGAGGGACTATGGCCGCTTAGGCCACGGAAGTTTGAGGCAATAACAGGTCTGTGATGCCCTTAGATGTTCTGGGCCGCACGCGCGCTACACTGATGTATTCAACGAGTCTATAGCCTTGGCCGACAGGCCCGGGTAATCTTTGAAATTTCATCGTGATGGGGATAGATCATTGCAATTGTTGGTCTTCAACGAGGAATTCCTAGTAAGCGCGAGTCATCAGCTCGCGTTGACTACGTCCCTGCCCTTTGTACACACCGCCCGTCGCTCCTACCGATTGAATGGTCCGGTGAAGTGTTCGGATTGCGGCGACGTGGGCGGTTCGCTGCCCGCGACGTTGTGAGAAGTCCACTGAACCTTATCATTTAGAGGAAGGAGAAGTCGTAACAAGGTTTCCGTAGGTGAACCTGCGGAAG"
        cls.Mstativa_taxid = 27126
        cls.medicago_taxid = 11832
        cls.medicago = 'medicago'
        cls.Mstativa_taxpath = "Eukaryota;Archaeplastida;Chloroplastida;Charophyta;Phragmoplastophyta;Streptophyta;Embryophyta;Tracheophyta;Spermatophyta;Magnoliophyta;Fabales;Vigna;"
        cls.Fungal_taxid = 6516

    def test_get_accessions(self):
        accession=self.silva.get_accessions(self.Mstativa_taxpath)        
        self.assertIn(self.Mstativa, accession)

    def test_find_taxpath(self):
        dat=self.silva.find_taxpath("Vigna",print_results =False)
        self.assertIn(self.Mstativa_taxpath, dat)

    def test_find_organism(self):
        search = "Medicago sativa"
        dat=self.silva.find_organism(search,print_results =False)
        self.assertIn(self.Mstativa, dat)

    def test_get_seqs(self):
        seq = self.silva.get_seqs(self.Mstativa)
        self.assertEqual(seq[0][1],self.Mstativa_seq)

if __name__ == '__main__':
    unittest.main()
